% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_blastn_2_iqtree.R
\name{map_blastn_2_iqtree}
\alias{map_blastn_2_iqtree}
\title{Map BLASTN (m6) pairwise similarities onto internal nodes of an IQ-TREE tree}
\usage{
map_blastn_2_iqtree(tre, blast_m6_path, len_threshold = 400)
}
\arguments{
\item{tre}{A treedata object returned by \code{treeio::read.iqtree("treefile")}.}

\item{blast_m6_path}{Path to a BLASTN outfmt 6 file (12-column tab-delimited).}

\item{len_threshold}{Numeric; minimum alignment \code{length} to retain (default 400).}
}
\value{
A tibble with one row per internal node containing:
\itemize{
\item \code{node}: internal node id
\item \code{ntaxa}: number of descendant taxa (that appear in BLAST)
\item \code{taxa}: descendant taxa labels (semicolon-separated)
\item \code{max_pident}, \code{max_pair_q}, \code{max_pair_s}, \code{max_length}, \code{max_gapopen}, \code{max_bitscore}
\item \code{min_pident}, \code{min_pair_q}, \code{min_pair_s}, \code{min_length}, \code{min_gapopen}, \code{min_bitscore}
}
}
\description{
Given a treedata object from \code{treeio::read.iqtree()} and a BLASTN outfmt 6 (m6)
file, this function enumerates all internal nodes, collects their descendant taxa,
and summarizes the \strong{maximum} and \strong{minimum} pairwise identities (pident)
within each node based on the best HSP per \emph{undirected} taxa pair
(priority: highest \code{pident} -> longest \code{length} -> highest \code{bitscore}).

It also prints diagnostics comparing taxa present in the tree vs. in the BLAST file.
}
\details{
Self-hits (\code{qseqid == sseqid}) are removed. For each undirected taxa pair
(\code{A||B} equals \code{B||A}) only the \strong{best} HSP is kept according to
\code{pident} (desc), then \code{length} (desc), then \code{bitscore} (desc).
Tip labels in the tree must match \code{qseqid/sseqid} in the m6 file.
}
\examples{
\dontrun{
tre <- treeio::read.iqtree("example.treefile")
res <- map_blastn_2_iqtree(
  tre,
  blast_m6_path = "blast.outfmt6",
  len_threshold = 400
)
head(res)
}

}
